name: Release Automation

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 2.1.2)'
        required: true
        type: string
      release_type:
        description: 'Release type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write

jobs:
  prepare-release:
    name: Prepare Release
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Update CHANGELOG
        run: |
          # Get the current date
          DATE=$(date +%Y-%m-%d)
          VERSION="${{ inputs.version }}"
          
          # Create a placeholder for the new version entry
          cat > changelog_template.txt << 'TEMPLATE_EOF'
          ## [VERSION] - DATE

          ### Added

          - 

          ### Changed

          - 

          ### Fixed

          - 

          ### Removed

          - 

          TEMPLATE_EOF
          
          # Replace placeholders
          sed -i "s/VERSION/$VERSION/g" changelog_template.txt
          sed -i "s/DATE/$DATE/g" changelog_template.txt
          
          # Insert the new entry after the header
          awk '/^## \[/ && !done {system("cat changelog_template.txt"); done=1} 1' CHANGELOG.md > CHANGELOG.tmp
          mv CHANGELOG.tmp CHANGELOG.md
          rm changelog_template.txt
          
          echo "::notice::Please update CHANGELOG.md with the actual changes for version $VERSION"
      
      - name: Create and Push Branch
        run: |
          BRANCH="release/v${{ inputs.version }}"
          git checkout -b "$BRANCH"
          git add CHANGELOG.md
          git commit -m "Prepare release v${{ inputs.version }}"
          git push origin "$BRANCH"
          
          # Create PR instructions
          echo "## ðŸŽ‰ Release branch created successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "1. **Create Pull Request**: [Click here to create PR](https://github.com/${{ github.repository }}/pull/new/release/v${{ inputs.version }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "2. **Update CHANGELOG.md** with the actual changes for v${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "3. **PR Template** (copy this for your PR description):" >> $GITHUB_STEP_SUMMARY
          echo '```markdown' >> $GITHUB_STEP_SUMMARY
          echo "## Release Checklist" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Update CHANGELOG.md with all changes" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Run all tests locally" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Verify all GitHub Actions pass" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Review documentation for accuracy" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Version: v${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "Type: ${{ inputs.release_type }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Once this PR is merged, the release will be created automatically via the tag push." >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          
          echo "::notice::âœ… Branch created! Click 'Summary' above for PR creation link and instructions."